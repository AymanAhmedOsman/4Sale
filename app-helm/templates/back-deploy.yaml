apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-backend
  labels:
    app: backend
spec:
  replicas: {{ .Values.backend.replicas }}
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      securityContext:              # üëà applies at the pod level
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: backend
          image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag }}"
          imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
          ports:
            - containerPort: 8000
          securityContext:          # üëà applies at the container level
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
        #----------
          resources:                          # ‚¨ÖÔ∏è ADD THIS
            requests:
              cpu: {{ .Values.backend.resources.requests.cpu }}
              memory: {{ .Values.backend.resources.requests.memory }}
            limits:
              cpu: {{ .Values.backend.resources.limits.cpu }}
              memory: {{ .Values.backend.resources.limits.memory }}
        #----------      
          env:
            - name: DB_HOST
              value: {{ .Values.backend.db.host }}
            - name: DB_PORT
              value: {{ .Values.backend.db.port | quote }}
            - name: DB_NAME
              value: {{ .Values.backend.db.name }}
            - name: DB_USER
              value: {{ .Values.backend.db.user }}
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-db-credentials
                  key: password
