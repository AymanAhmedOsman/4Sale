name: App CI/CD
on:
  push:
    paths:
      - 'app/**'
      - 'helm/**'
      - '.github/workflows/app.yml'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_BACKEND: ${{ github.repository }}/backend
  IMAGE_FRONTEND: ${{ github.repository }}/frontend

jobs:
  build-scan-sign:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - name: Login GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build images
        run: |
          docker build -t $REGISTRY/${{ env.IMAGE_BACKEND }}:${{ github.sha }} app/backend
          docker build -t $REGISTRY/${{ env.IMAGE_FRONTEND }}:${{ github.sha }} app/frontend
      - name: Trivy scan
        uses: aquasecurity/trivy-action@0.24.0
        with:
          image-ref: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_BACKEND }}:${{ github.sha }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_FRONTEND }}:${{ github.sha }}
          format: 'table'
          exit-code: '0'
      - name: Push images
        run: |
          docker push $REGISTRY/${{ env.IMAGE_BACKEND }}:${{ github.sha }}
          docker push $REGISTRY/${{ env.IMAGE_FRONTEND }}:${{ github.sha }}
      - name: Cosign install
        uses: sigstore/cosign-installer@v3
      - name: Cosign sign (keyless)
        env:
          COSIGN_EXPERIMENTAL: "true"
        run: |
          cosign sign $REGISTRY/${{ env.IMAGE_BACKEND }}:${{ github.sha }}
          cosign sign $REGISTRY/${{ env.IMAGE_FRONTEND }}:${{ github.sha }}

  deploy:
    needs: build-scan-sign
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - uses: azure/setup-kubectl@v4
      - uses: azure/setup-helm@v4
      - name: Configure AWS (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Update kubeconfig
        run: aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }} --region ${{ secrets.AWS_REGION }}
      - name: Helm dependency update
        run: helm dependency update helm/tasks-app
      - name: Set image tags and deploy
        run: |
          helm upgrade --install tasks helm/tasks-app -n app             --create-namespace             --set image.backend=${{ env.REGISTRY }}/${{ env.IMAGE_BACKEND }}:${{ github.sha }}             --set image.frontend=${{ env.REGISTRY }}/${{ env.IMAGE_FRONTEND }}:${{ github.sha }}
      - name: Validate RBAC (example)
        run: kubectl auth can-i get pods -n app
